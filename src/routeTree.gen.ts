/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as AuthenticatedZehnlyDuoRouteImport } from './routes/_authenticated/zehnly-duo'
import { Route as AuthenticatedUserManagementRouteImport } from './routes/_authenticated/user-management'
import { Route as AuthenticatedLearningCentersRouteImport } from './routes/_authenticated/learning-centers'
import { Route as AuthenticatedDuoStatsRouteImport } from './routes/_authenticated/duo-stats'
import { Route as AuthenticatedErrorsErrorRouteImport } from './routes/_authenticated/errors/$error'
import { Route as AuthenticatedContentWordsRouteImport } from './routes/_authenticated/content/words'
import { Route as AuthenticatedContentLessonsRouteImport } from './routes/_authenticated/content/lessons'
import { Route as AuthenticatedContentCoursesRouteImport } from './routes/_authenticated/content/courses'
import { Route as AuthenticatedContentChaptersRouteImport } from './routes/_authenticated/content/chapters'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedZehnlyDuoRoute = AuthenticatedZehnlyDuoRouteImport.update({
  id: '/zehnly-duo',
  path: '/zehnly-duo',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedUserManagementRoute =
  AuthenticatedUserManagementRouteImport.update({
    id: '/user-management',
    path: '/user-management',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedLearningCentersRoute =
  AuthenticatedLearningCentersRouteImport.update({
    id: '/learning-centers',
    path: '/learning-centers',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedDuoStatsRoute = AuthenticatedDuoStatsRouteImport.update({
  id: '/duo-stats',
  path: '/duo-stats',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedErrorsErrorRoute =
  AuthenticatedErrorsErrorRouteImport.update({
    id: '/errors/$error',
    path: '/errors/$error',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedContentWordsRoute =
  AuthenticatedContentWordsRouteImport.update({
    id: '/content/words',
    path: '/content/words',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedContentLessonsRoute =
  AuthenticatedContentLessonsRouteImport.update({
    id: '/content/lessons',
    path: '/content/lessons',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedContentCoursesRoute =
  AuthenticatedContentCoursesRouteImport.update({
    id: '/content/courses',
    path: '/content/courses',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedContentChaptersRoute =
  AuthenticatedContentChaptersRouteImport.update({
    id: '/content/chapters',
    path: '/content/chapters',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/duo-stats': typeof AuthenticatedDuoStatsRoute
  '/learning-centers': typeof AuthenticatedLearningCentersRoute
  '/user-management': typeof AuthenticatedUserManagementRoute
  '/zehnly-duo': typeof AuthenticatedZehnlyDuoRoute
  '/': typeof AuthenticatedIndexRoute
  '/content/chapters': typeof AuthenticatedContentChaptersRoute
  '/content/courses': typeof AuthenticatedContentCoursesRoute
  '/content/lessons': typeof AuthenticatedContentLessonsRoute
  '/content/words': typeof AuthenticatedContentWordsRoute
  '/errors/$error': typeof AuthenticatedErrorsErrorRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/duo-stats': typeof AuthenticatedDuoStatsRoute
  '/learning-centers': typeof AuthenticatedLearningCentersRoute
  '/user-management': typeof AuthenticatedUserManagementRoute
  '/zehnly-duo': typeof AuthenticatedZehnlyDuoRoute
  '/': typeof AuthenticatedIndexRoute
  '/content/chapters': typeof AuthenticatedContentChaptersRoute
  '/content/courses': typeof AuthenticatedContentCoursesRoute
  '/content/lessons': typeof AuthenticatedContentLessonsRoute
  '/content/words': typeof AuthenticatedContentWordsRoute
  '/errors/$error': typeof AuthenticatedErrorsErrorRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/_authenticated/duo-stats': typeof AuthenticatedDuoStatsRoute
  '/_authenticated/learning-centers': typeof AuthenticatedLearningCentersRoute
  '/_authenticated/user-management': typeof AuthenticatedUserManagementRoute
  '/_authenticated/zehnly-duo': typeof AuthenticatedZehnlyDuoRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/content/chapters': typeof AuthenticatedContentChaptersRoute
  '/_authenticated/content/courses': typeof AuthenticatedContentCoursesRoute
  '/_authenticated/content/lessons': typeof AuthenticatedContentLessonsRoute
  '/_authenticated/content/words': typeof AuthenticatedContentWordsRoute
  '/_authenticated/errors/$error': typeof AuthenticatedErrorsErrorRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/duo-stats'
    | '/learning-centers'
    | '/user-management'
    | '/zehnly-duo'
    | '/'
    | '/content/chapters'
    | '/content/courses'
    | '/content/lessons'
    | '/content/words'
    | '/errors/$error'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/duo-stats'
    | '/learning-centers'
    | '/user-management'
    | '/zehnly-duo'
    | '/'
    | '/content/chapters'
    | '/content/courses'
    | '/content/lessons'
    | '/content/words'
    | '/errors/$error'
  id:
    | '__root__'
    | '/_authenticated'
    | '/login'
    | '/_authenticated/duo-stats'
    | '/_authenticated/learning-centers'
    | '/_authenticated/user-management'
    | '/_authenticated/zehnly-duo'
    | '/_authenticated/'
    | '/_authenticated/content/chapters'
    | '/_authenticated/content/courses'
    | '/_authenticated/content/lessons'
    | '/_authenticated/content/words'
    | '/_authenticated/errors/$error'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/zehnly-duo': {
      id: '/_authenticated/zehnly-duo'
      path: '/zehnly-duo'
      fullPath: '/zehnly-duo'
      preLoaderRoute: typeof AuthenticatedZehnlyDuoRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/user-management': {
      id: '/_authenticated/user-management'
      path: '/user-management'
      fullPath: '/user-management'
      preLoaderRoute: typeof AuthenticatedUserManagementRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/learning-centers': {
      id: '/_authenticated/learning-centers'
      path: '/learning-centers'
      fullPath: '/learning-centers'
      preLoaderRoute: typeof AuthenticatedLearningCentersRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/duo-stats': {
      id: '/_authenticated/duo-stats'
      path: '/duo-stats'
      fullPath: '/duo-stats'
      preLoaderRoute: typeof AuthenticatedDuoStatsRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/errors/$error': {
      id: '/_authenticated/errors/$error'
      path: '/errors/$error'
      fullPath: '/errors/$error'
      preLoaderRoute: typeof AuthenticatedErrorsErrorRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/content/words': {
      id: '/_authenticated/content/words'
      path: '/content/words'
      fullPath: '/content/words'
      preLoaderRoute: typeof AuthenticatedContentWordsRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/content/lessons': {
      id: '/_authenticated/content/lessons'
      path: '/content/lessons'
      fullPath: '/content/lessons'
      preLoaderRoute: typeof AuthenticatedContentLessonsRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/content/courses': {
      id: '/_authenticated/content/courses'
      path: '/content/courses'
      fullPath: '/content/courses'
      preLoaderRoute: typeof AuthenticatedContentCoursesRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/content/chapters': {
      id: '/_authenticated/content/chapters'
      path: '/content/chapters'
      fullPath: '/content/chapters'
      preLoaderRoute: typeof AuthenticatedContentChaptersRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthenticatedRouteRouteChildren {
  AuthenticatedDuoStatsRoute: typeof AuthenticatedDuoStatsRoute
  AuthenticatedLearningCentersRoute: typeof AuthenticatedLearningCentersRoute
  AuthenticatedUserManagementRoute: typeof AuthenticatedUserManagementRoute
  AuthenticatedZehnlyDuoRoute: typeof AuthenticatedZehnlyDuoRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedContentChaptersRoute: typeof AuthenticatedContentChaptersRoute
  AuthenticatedContentCoursesRoute: typeof AuthenticatedContentCoursesRoute
  AuthenticatedContentLessonsRoute: typeof AuthenticatedContentLessonsRoute
  AuthenticatedContentWordsRoute: typeof AuthenticatedContentWordsRoute
  AuthenticatedErrorsErrorRoute: typeof AuthenticatedErrorsErrorRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedDuoStatsRoute: AuthenticatedDuoStatsRoute,
  AuthenticatedLearningCentersRoute: AuthenticatedLearningCentersRoute,
  AuthenticatedUserManagementRoute: AuthenticatedUserManagementRoute,
  AuthenticatedZehnlyDuoRoute: AuthenticatedZehnlyDuoRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedContentChaptersRoute: AuthenticatedContentChaptersRoute,
  AuthenticatedContentCoursesRoute: AuthenticatedContentCoursesRoute,
  AuthenticatedContentLessonsRoute: AuthenticatedContentLessonsRoute,
  AuthenticatedContentWordsRoute: AuthenticatedContentWordsRoute,
  AuthenticatedErrorsErrorRoute: AuthenticatedErrorsErrorRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
